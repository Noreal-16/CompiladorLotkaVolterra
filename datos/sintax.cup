package AnalizadorSintactico;
import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    public void syntax_error(Symbol s){
        this.s = s;
    }
    public Symbol getS(){
        return this.s;
    }
:};

terminal ASIGNACION, PARENTESIS_A, PARENTESIS_C, ARITMETICOS, P_COMA, NOMBRE, DIGITO, ERROR, P_RESERVADA;
non terminal INICIO, VARIABLE, SENTENCIA, DECLARACION, DESARROLLO, OPERACION, OPERACION1, VALOR,AUXOPERACION,PARENTESIS;
INICIO ::= SENTENCIA;
SENTENCIA ::= DECLARACION | DESARROLLO  |DECLARACION SENTENCIA | DESARROLLO SENTENCIA;

DECLARACION ::= NOMBRE ASIGNACION DIGITO P_COMA    | NOMBRE ASIGNACION NOMBRE P_COMA |
                NOMBRE ASIGNACION OPERACION P_COMA | P_RESERVADA ASIGNACION NOMBRE P_COMA | NOMBRE ASIGNACION OPERACION1 P_COMA;


DESARROLLO ::= P_RESERVADA ASIGNACION OPERACION P_COMA | P_RESERVADA  ASIGNACION PARENTESIS  P_COMA ;

OPERACION ::= AUXOPERACION ARITMETICOS PARENTESIS_A VAUXOPERACION ARITMETICOS VALOR PARENTESIS_C |
              PARENTESIS ARITMETICOS  AUX   |
              PARENTESIS ARITMETICOS PARENTESIS_A AUX  PARENTESIS_C |
              ARITMETICOS AUXOPERACION ARITMETICOS PARENTESIS_A AUX PARENTESIS_C|
              PARENTESIS_A ARITMETICOS AUXOPERACION PARENTESIS_C ARITMETICOS PARENTESIS_A AUXPARENTESIS_C|
              PARENTESIS_A AUX PARENTESIS_C ARITMETICOS PARENTESIS |
              AUX  ARITMETICOS AUXOPERACION  ;


OPERACION1::= VALOR  ARITMETICOS VALOR ARITMETICOS VALOR;
AUXOPERACION::= VALOR ARITMETICOS VALOR;
PARENTESIS::=PARENTESIS_A VALOR ARITMETICOS VALOR PARENTESIS_C;
AUX::= VALOR ARITMETICOS VALOR ARITMETICOS VALOR;

VALOR ::= DIGITO | NOMBRE;

